# Dockerfile.jenkins-dotnet-3.1-docker-client

# FIX: Use Microsoft's official .NET SDK 3.1 image as base.
# This image already contains the dotnet-sdk-3.1 you need.
FROM mcr.microsoft.com/dotnet/sdk:3.1

# Set environment variables for non-interactive installations
ENV DEBIAN_FRONTEND=noninteractive

# Install common tools (git, curl, wget, gnupg for package signing)
# and packages required for Docker repository setup
RUN apt-get update && apt-get install -y --no-install-recommends \
    curl \
    git \
    wget \
    gnupg \
    apt-transport-https \
    ca-certificates \
    software-properties-common \
    && rm -rf /var/lib/apt/lists/*

# --- Install Docker CLI (client) ---
# Add Docker's official GPG key
RUN install -m 0755 -d /etc/apt/keyrings && \
    curl -fsSL https://download.docker.com/linux/debian/gpg | gpg --dearmor -o /etc/apt/keyrings/docker.gpg

# Add the Docker apt repository
# The dotnet/sdk:3.1 image is based on Debian 10 (Buster), so specify 'buster'
RUN echo \
  "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/debian \
  buster stable" | tee /etc/apt/sources.list.d/docker.list > /dev/null

# Update apt-get after adding Docker's new repository
RUN apt-get update

# Install the Docker CLI client
RUN apt-get install -y --no-install-recommends docker-ce-cli \
    && rm -rf /var/lib/apt/lists/*

# Create a non-root user (good practice)
ARG AGENT_UID=1001
ARG AGENT_GID=1001
RUN groupadd -g ${AGENT_GID} jenkins && \
    useradd -u ${AGENT_UID} -g jenkins -m jenkins && \
    chown -R jenkins:jenkins /home/jenkins

USER jenkins
WORKDIR /home/jenkins/agent

# Default command to keep the container running if used as a permanent agent
CMD ["bash"]